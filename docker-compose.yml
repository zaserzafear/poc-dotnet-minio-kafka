services:
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      # KRaft mode
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1

      # Listeners (ต้องมี controller และ broker)
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093

      # Broker settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: "v2hAqQxhTZG1dnq1r1DkXA"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data:/var/lib/kafka/data

  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-pass
      LOG_LEVEL: ${LOG_LEVEL:-info}
    command: server --console-address ":9070" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9070:9070

  createbuckets:
    image: minio/mc
    container_name: minio-createbuckets
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-pass
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set bucket-store $$MINIO_ENDPOINT $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb --ignore-existing bucket-store/upload-files;
      /usr/bin/mc anonymous set download bucket-store/upload-files;
      "

volumes:
  kafka-data:
  minio-data:
