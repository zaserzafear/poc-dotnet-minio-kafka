services:
  # producer:
  #   build:
  #     context: .
  #     dockerfile: Producer/Dockerfile
  #   container_name: app-producer
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   environment:
  #     ASPNETCORE_HTTP_PORTS: 8080
  #     Minio__Endpoint: minio:9000
  #     Kafka__BootstrapServers: kafka:9094
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "10m"
  #       max-file: "5"

  # consumer:
  #   build:
  #     context: .
  #     dockerfile: Consumer/Dockerfile
  #   container_name: app-consumer
  #   restart: unless-stopped
  #   environment:
  #     Minio__Endpoint: minio:9000
  #     Kafka__BootstrapServers: kafka:9094
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "10m"
  #       max-file: "5"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9094:9094
    environment:
      - KAFKA_CLUSTER_ID=pMvr7h8TS42F4O07CxFFNw
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://host.docker.internal:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-data:/bitnami/kafka
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-pass
      LOG_LEVEL: ${LOG_LEVEL:-info}
    command: server --console-address ":9070" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9070:9070
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

  createbuckets:
    image: minio/mc
    container_name: minio-createbuckets
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-pass
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set bucket-store $$MINIO_ENDPOINT $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb --ignore-existing bucket-store/upload-files;
      /usr/bin/mc anonymous set download bucket-store/upload-files;
      "

volumes:
  kafka-data:
  minio-data:
